class Solution {
    public String convert(String s, int numRows) {
        // Obsługa przypadków szczególnych
        if (numRows == 1 || numRows >= s.length()) {
            return s; // Jeśli tylko 1 wiersz, nie ma potrzeby konwersji
        }

        char[][] zigzag = new char[numRows][s.length()];
        int counter = 0;
        int row = 0;
        boolean goingDown = false;

        // Wypełnianie tablicy zigzaga
        for (int col = 0; col < s.length(); col++) {
            zigzag[row][col] = s.charAt(col);

            // zmiana kierunku góra-dół
            if (row == 0 || row == numRows - 1) {
                goingDown = !goingDown;
            }

            // przejście góra-dół
            if (goingDown) {
                row += 1;
            } else {
                row -= 1;
            }
        }

        // wynik
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < numRows; i++) {
            for (int j = 0; j < s.length(); j++) {
                if (zigzag[i][j] != 0) { // Tylko dodajemy wypełnione znaki
                    result.append(zigzag[i][j]);
                }
            }
        }

        return result.toString();
    }
}

-----------------------
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"